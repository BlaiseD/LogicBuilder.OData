name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
        source-url: https://nuget.pkg.github.com/blaised/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set Version Number
      run: echo '::set-env name=VERSION_NUMBER::2.0.1-preview08'

    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.AspNet.OData'
    - name: Pack and Push
      run: ./CI_Build_Push.ps1
      shell: pwsh

#    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.AspNet.OData'
#    - name: Set paths
#      run: |
#        echo '::set-env name=PROJECT_PATH::.\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj'
#        echo '::set-env name=NUGET_PACKAGE_PATH::.\artifacts\${{ env.PROJECT_NAME }}.${{ env.VERSION_NUMBER }}.nupkg'
#
#    - name: Build and push
#      run: |
#        dotnet build $Env:PROJECT_PATH --configuration Release
#        dotnet pack $Env:PROJECT_PATH -c Release -o .\artifacts --no-build
#        dotnet nuget push $Env:NUGET_PACKAGE_PATH --skip-duplicate

    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.AspNetCore.OData'
    - name: Pack and Push
      run: ./CI_Build_Push.ps1
      shell: pwsh

#    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.AspNetCore.OData'
#    - name: Set paths
#      run: |
#        echo '::set-env name=PROJECT_PATH::.\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj'
#        echo '::set-env name=NUGET_PACKAGE_PATH::.\artifacts\${{ env.PROJECT_NAME }}.${{ env.VERSION_NUMBER }}.nupkg'
#
#    - name: Build and push
#      run: |
#        dotnet build $Env:PROJECT_PATH --configuration Release
#        dotnet pack $Env:PROJECT_PATH -c Release -o .\artifacts --no-build
#        dotnet nuget push $Env:NUGET_PACKAGE_PATH --skip-duplicate

    - name: Build All
      run: dotnet build --configuration Release

    - name: Test
      run: dotnet test --no-restore --verbosity normal

    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.OData.EFCore'
    - name: Set paths
      run: |
        echo '::set-env name=PROJECT_PATH::.\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj'
        echo '::set-env name=NUGET_PACKAGE_PATH::.\artifacts\${{ env.PROJECT_NAME }}.${{ env.VERSION_NUMBER }}.nupkg'
    - name: Pack and push
      run: |
        dotnet pack $Env:PROJECT_PATH -c Release -o .\artifacts --no-build
        dotnet nuget push $Env:NUGET_PACKAGE_PATH --skip-duplicate

    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.AspNet.OData.EF6'
    - name: Set paths
      run: |
        echo '::set-env name=PROJECT_PATH::.\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj'
        echo '::set-env name=NUGET_PACKAGE_PATH::.\artifacts\${{ env.PROJECT_NAME }}.${{ env.VERSION_NUMBER }}.nupkg'
    - name: Pack and push
      run: |
        dotnet pack $Env:PROJECT_PATH -c Release -o .\artifacts --no-build
        dotnet nuget push $Env:NUGET_PACKAGE_PATH --skip-duplicate

    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.AspNetCore.OData.EF6'
    - name: Set paths
      run: |
        echo '::set-env name=PROJECT_PATH::.\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj'
        echo '::set-env name=NUGET_PACKAGE_PATH::.\artifacts\${{ env.PROJECT_NAME }}.${{ env.VERSION_NUMBER }}.nupkg'
    - name: Pack and push
      run: |
        dotnet pack $Env:PROJECT_PATH -c Release -o .\artifacts --no-build
        dotnet nuget push $Env:NUGET_PACKAGE_PATH --skip-duplicate
